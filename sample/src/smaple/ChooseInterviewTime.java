/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smaple;

import com.mysql.cj.util.StringUtils;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author zxh25
 */
public class ChooseInterviewTime extends javax.swing.JFrame {

    private Employee e;

    public void SetEmployee(Employee e) {
        this.e = e;
    }
    private room r;

    public void SetRoom(room r) {
        this.r = r;
    }
    private static String AppoinmentID;
    DefaultListModel<String> listModelTimeSlots = new DefaultListModel<>();

    /**
     * Creates new form ChooseInterviewTime
     */
    public ChooseInterviewTime() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListTimeSlots = new javax.swing.JList<>();
        BtnConfirm = new javax.swing.JButton();
        BtnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Choose an interview time"));

        jScrollPane1.setViewportView(ListTimeSlots);

        BtnConfirm.setText("Confirm");
        BtnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnConfirmActionPerformed(evt);
            }
        });

        BtnBack.setText("Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        jLabel1.setText("Choose a time slot from below:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(BtnConfirm)
                        .addGap(57, 57, 57)
                        .addComponent(BtnBack)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnConfirm)
                    .addComponent(BtnBack))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:

        ArrayList<String> timeSlots = r.showTimeSlots();
        for (int i = 0; i < timeSlots.size(); i++) {
            listModelTimeSlots.addElement(r.timeSlots.get(i));
        }

        ListTimeSlots.setModel(listModelTimeSlots);
    }//GEN-LAST:event_formWindowOpened

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        // TODO add your handling code here:
        MainPage mp = new MainPage();
        mp.SetEmployee(e);
        mp.SetRoom(r);
        mp.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_BtnBackActionPerformed

    private void BtnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnConfirmActionPerformed
        // TODO add your handling code here:
        String selectedTimeSlot = ListTimeSlots.getSelectedValue();
        int selectedTimeSlotIndex = ListTimeSlots.getSelectedIndex();
        String ErID = "";
        int resp = JOptionPane.showConfirmDialog(this, String.format("The time slot is %s ?", selectedTimeSlot), "Confirm Time Slot", JOptionPane.YES_NO_OPTION);
        if (resp == JOptionPane.YES_OPTION) {
            String sqlz = String.format("select max(AppointmentID) from appointment;");
            try {
                Statement s = DBConnector.getConnection().createStatement();
                ResultSet rs = s.executeQuery(sqlz);
                while (rs.next()) {
                    if(StringUtils.isNullOrEmpty(rs.getString(1))){
                    AppoinmentID = "0";}else{
                    AppoinmentID = Integer.toString(Integer.parseInt(rs.getString(1)) + 1);
                    }
                }
            } catch (SQLException sqle) {
                sqle.printStackTrace();
            }

            String sqlx = String.format("Select Interviewers from room where TimeSlots ='%s';", r.timeSlots.get(selectedTimeSlotIndex));
            try {
                Statement s = DBConnector.getConnection().createStatement();
                ResultSet rs = s.executeQuery(sqlx);
                while (rs.next()) {
                    ErID = rs.getString(1);
                }
            } catch (SQLException sqle) {
                sqle.printStackTrace();
            }
            String[] ErIDList = ErID.split(",");
            String[] sqlThree = new String[ErIDList.length];
            for (int i = 0; i < ErIDList.length; i++) {
                sqlThree[i]= String.format("insert into interviewerTeam values ('%s','%s'); ", ErIDList[i], AppoinmentID);
            }
            String[] sql = new String[3];
            sql[0] = String.format("update room set room.AppoinmentID='%s' where TimeSlots='%s';", AppoinmentID, selectedTimeSlot);
            sql[1] = String.format("insert into Appointment values('%s')", AppoinmentID);
            sql[2] = String.format("update interviewee set AppoinmentID='%s' where EEID='%s';", AppoinmentID, e.getId());
            Connection cnn = DBConnector.getConnection();
            try {
                Statement s = cnn.createStatement();
                cnn.setAutoCommit(false);
                for (int i = 0; i < sql.length; i++) {
                    s.executeUpdate(sql[i]);
                }
                for (int i = 0; i < sqlThree.length; i++) {
                    s.executeUpdate(sqlThree[i]);
                }
                cnn.commit();
            } catch (SQLException sqle) {
                try {
                    cnn.rollback();
                } catch (SQLException ex) {
                    Logger.getLogger(ChooseInterviewTime.class.getName()).log(Level.SEVERE, null, ex);
                }
                sqle.printStackTrace();
            }
            Appointment apt = new Appointment(AppoinmentID, selectedTimeSlot);
            e.addAppointment(apt);
            listModelTimeSlots.remove(selectedTimeSlotIndex);
            MainPage mp = new MainPage();
            mp.SetEmployee(e);
            mp.SetRoom(r);
            mp.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_BtnConfirmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChooseInterviewTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChooseInterviewTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChooseInterviewTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChooseInterviewTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChooseInterviewTime().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnConfirm;
    private javax.swing.JList<String> ListTimeSlots;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
